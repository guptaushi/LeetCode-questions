public class Solution {
    public int uniqueLetterString(String s) {
        int n = s.length();
        int[] lastPos = new int[26]; // store the most recent previous occurrence of each character
        int[] prevPos = new int[26]; // store the second most recent previous occurrence of each character
        Arrays.fill(lastPos, -1); // initialize lastPos with -1
        Arrays.fill(prevPos, -1); // initialize prevPos with -1

        int result = 0;

         for (int i = 0; i < n; i++) {
            char c = s.charAt(i);
            int index = c - 'A';
            int k = prevPos[index];
            int j = lastPos[index];
            result += (i - j) * (j - k);
            prevPos[index] = j;
            lastPos[index] = i;
        }

        for (int i = 0; i < 26; i++) {
            int k = prevPos[i];
            int j = lastPos[i];
            result += (n - j) * (j - k);
        }

        return result;
    }

    public static void main(String[] args) {
        Solution sol = new Solution();
        String s = "LEETCODE";
        int result = sol.uniqueLetterString(s);
        System.out.println("The sum of countUniqueChars for all substrings is: " + result); // Output: The sum of countUniqueChars for all substrings is: 92
    }
}
